I"!+<h1 id="pyecharts简介">pyecharts简介</h1>

<p>echarts是百度开源的一个可视化JS工具，而pyecharts是一款将Python和echarts相结合的强大数据可视化工具，众所周知，Python在数据分析和可视化方面具有很大优势，将二者结合，可以绘制出漂亮的图形。</p>

<p>pyecharts的官方文档可以在<a href="http://pyecharts.org/#/zh-cn/">此处</a>查阅，其中的Demo很直观的展示了不同图形的生成方法。建议在使用过程中，先确定自己要生成的图形类型，然后去官方文档中找到对于的图形Demo进行查看，之后变为自己的数据就可生成想要的图形。若需要对图形配置项进行修改，可以查看全局配置项和系列配置项。</p>

<h1 id="疫情地图绘制">疫情地图绘制</h1>

<p>疫情爆发以来，每天最扣人心弦的就是各地确诊病例、疑似病例以及治愈病例的数量，图形作为最直观反映数据的手段，疫情地图也很快出现在了各大信息门户网站的首页，本着学习的态度，我试着使用Python爬虫和pyecharts进行疫情地图的绘制，选取各个省的确诊病例数量作为数据。</p>

<p>首先，我选取<a href="https://ncov.dxy.cn/ncovh5/view/pneumonia_peopleapp?from=timeline&amp;isappinstalled=0">丁香园</a>作为数据爬取的网站，丁香园是较早进行疫情数据统计而且数据更新较快的网站。查看网页源代码可以发现，我们所需的数据所在字段为<code class="highlighter-rouge">&lt;script id="getAreaStat"&gt;</code>，之后便可进行数据的爬取了。</p>

<p>由于此次爬虫只是针对单个界面的简单爬取，就选择<code class="highlighter-rouge">request</code>库和<code class="highlighter-rouge">BeautifulSoup</code>库进行数据爬取，首先定义获取HTML页面内容的函数如下：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">getHTMLText</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
        <span class="n">r</span><span class="o">.</span><span class="n">raise_for_status</span><span class="p">()</span>
        <span class="n">r</span><span class="o">.</span><span class="n">encoding</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">apparent_encoding</span>
        <span class="k">return</span> <span class="n">r</span><span class="o">.</span><span class="n">text</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">"产生异常"</span>
</code></pre></div></div>
<p>其次，定义了从HTML页面中获取省份及其对应确诊病例数量的函数：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">fillCountList</span><span class="p">(</span><span class="n">provinces</span><span class="p">,</span> <span class="n">confirmedCount</span><span class="p">,</span> <span class="n">html</span><span class="p">):</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">html</span><span class="p">,</span> <span class="s">"html.parser"</span><span class="p">)</span>
    <span class="n">ProvincesInfo_string</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'script'</span><span class="p">,</span> <span class="nb">id</span><span class="o">=</span><span class="s">"getAreaStat"</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">string</span><span class="p">[</span><span class="mi">28</span><span class="p">:</span><span class="o">-</span><span class="mi">12</span><span class="p">]</span>
    <span class="n">ProvincesInfo_tuple</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">ProvincesInfo_string</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">province</span> <span class="ow">in</span> <span class="n">ProvincesInfo_tuple</span><span class="p">:</span>
        <span class="n">provinces</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">province</span><span class="p">[</span><span class="s">'provinceShortName'</span><span class="p">])</span>
        <span class="n">confirmedCount</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">province</span><span class="p">[</span><span class="s">'confirmedCount'</span><span class="p">])</span>
</code></pre></div></div>
<p>其中，<code class="highlighter-rouge">soup.find_all()</code>获得一个列表，需要对其进行取下标操作获得包含数据信息的字符串，<code class="highlighter-rouge">.string[28:-12]</code>是去除字符串前后无关的字符，最后通过<code class="highlighter-rouge">eval()</code>函数将字符串类型转化为Python内置类型tuple，tuple中的每一个元素代表一个省份，通过遍历将每个省份的名称和确诊人数数据提取到两个列表中。</p>

<p>有了数据，便可以进行疫情地图的绘制了。为了使用pyecharts，首先需要对其进行安装<code class="highlighter-rouge">pip install pyecharts</code>,之后在使用前导入即可。由于本次是要绘制地图，所以<code class="highlighter-rouge">from pyecharts.charts import Map</code>，同时由于需要对图形进行配置，还需<code class="highlighter-rouge">from pyecharts import options as opts</code>。之后就是主函数的定义了：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">provinces</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">confirmedCount</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s">'https://ncov.dxy.cn/ncovh5/view/pneumonia_peopleapp?from=timeline&amp;isappinstalled=0'</span>
    <span class="n">html</span> <span class="o">=</span> <span class="n">getHTMLText</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="n">fillCountList</span><span class="p">(</span><span class="n">provinces</span><span class="p">,</span> <span class="n">confirmedCount</span><span class="p">,</span> <span class="n">html</span><span class="p">)</span>
    <span class="nb">map</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">Map</span><span class="p">()</span>
    <span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="s">"确诊人数"</span><span class="p">,</span> <span class="p">[</span><span class="nb">list</span><span class="p">(</span><span class="n">z</span><span class="p">)</span> <span class="k">for</span> <span class="n">z</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">provinces</span><span class="p">,</span> <span class="n">confirmedCount</span><span class="p">)],</span> <span class="s">"china"</span><span class="p">)</span>
    <span class="o">.</span><span class="n">set_global_opts</span><span class="p">(</span>
            <span class="n">title_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TitleOpts</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">"疫情地图（2020-02-06)"</span><span class="p">,</span> <span class="n">subtitle</span><span class="o">=</span><span class="s">"Made by Maolin"</span><span class="p">),</span>
            <span class="n">visualmap_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">VisualMapOpts</span><span class="p">(</span><span class="n">max_</span><span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">confirmedCount</span><span class="p">),</span> <span class="n">is_piecewise</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
            <span class="n">pieces</span><span class="o">=</span> <span class="p">[{</span><span class="s">"min"</span> <span class="p">:</span> <span class="mi">1000</span><span class="p">},</span> <span class="p">{</span><span class="s">"min"</span> <span class="p">:</span> <span class="mi">500</span><span class="p">,</span> <span class="s">"max"</span> <span class="p">:</span> <span class="mi">999</span><span class="p">},</span>
                    <span class="p">{</span><span class="s">"min"</span> <span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="s">"max"</span> <span class="p">:</span> <span class="mi">499</span><span class="p">},</span> <span class="p">{</span><span class="s">"min"</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s">"max"</span> <span class="p">:</span> <span class="mi">99</span><span class="p">},</span>
                    <span class="p">{</span><span class="s">"min"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"max"</span> <span class="p">:</span> <span class="mi">9</span><span class="p">}]),</span>
            <span class="p">)</span>
    <span class="p">)</span>
    <span class="nb">map</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="s">"2020-02-06.html"</span><span class="p">)</span>
</code></pre></div></div>
<p>其中，对于图形的配置主要包括标题、子标题、分段区间，生成的结果为HTML格式文件，可以在浏览器中打开，当然也可以生成图片格式文件，下图是通过以上程序绘制的截止本文撰写时(2020-02-29)疫情分布情况：
<img src="https://i.loli.net/2020/02/29/aevqjQ5Kcz4i6rB.png" alt="疫情地图.png" /></p>

<h1 id="后记">后记</h1>

<p>至此，疫情地图的绘制就完成了，本次的主要目的是学习pyecharts绘制地图的使用，仅选取了确诊病例一个指标进行了展示，当然你也可以选取其他更多指标进行展示，也可以获取多天的数据进行折线图的绘制等等。</p>
:ET